---
title: "Joscelin's Favorite Packages & Functions"
editor: 
  markdown: 
    wrap: 72
---

<link href="https://fonts.googleapis.com/css?family=Cookie" rel="stylesheet"><a class="bmc-button" target="_blank" href="https://www.buymeacoffee.com/JoscelinRocha">![Buy
me a
coffee](https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg){alt="Buy me a coffee"
width="15" height="21"}Buy me a coffee</a>

------------------------------------------------------------------------

-   ❇️ [acadyr: Work with Financial and Academic Years in
    R](https://wurli.github.io/acadyr/) 💯

    -   By Wurli
    -   Added Thu Feb 20, 2025
    -   **What is this?**
    -   The **acadyr** package provides utility functions for creating
        and working with financial and academic years in R. It addresses
        challenges associated with non-calendar year types, such as
        differing start dates and formatting complexities. The package
        allows users to define financial or academic years with
        customizable start dates, facilitating seamless integration into
        data analysis workflows. Additionally, **acadyr** ensures
        compatibility with visualization tools like **ggplot2**,
        enabling clear and accurate representation of data categorized
        by these non-standard years.
    -   Link to package here: <https://wurli.github.io/acadyr/>

-   ❇️ [Analyzing International Survey Data with the pewmethods R
    Package](https://medium.com/pew-research-center-decoded/analyzing-international-survey-data-with-the-pewmethods-r-package-3b0b21cba607)

    -   Added Thu Feb 20, 2025

    -   This article introduces the **pewmethods** R package, designed
        to facilitate the analysis of international survey data. The
        package streamlines the process of converting individual-level
        data to country-level summaries, enabling researchers to
        efficiently analyze and interpret survey results. By providing
        tools for data transformation and weighting, **pewmethods**
        enhances the accuracy and comparability of cross-national survey
        analyses.

    -   Link to article:
        <https://medium.com/pew-research-center-decoded/analyzing-international-survey-data-with-the-pewmethods-r-package-3b0b21cba607>

-   ❇️ [grateful: Facilitate citation of R
    packages](https://pakillo.github.io/grateful/) 💯

    -   Added Mon Apr 24, 2023
    -   The goal of **grateful** is to make it very easy to cite R and
        the R packages used in any analyses, so that package authors
        receive their deserved credit. By calling a single function,
        **grateful** will scan the project for R packages used and
        generate a BibTeX file containing all citations for those
        packages.
    -   **grateful** can then generate a new document with citations in
        the desired output format (Word, PDF, HTML, Markdown). These
        references can be formatted for a specific journal, so that we
        can just paste them directly into our manuscript or report.
    -   Link to package: <https://pakillo.github.io/grateful/>

-   ❇️ [widyr: Widen, process, and re-tidy a
    dataset](https://github.com/dgrtwo/widyr) 💯

    -   This a package developed by David Robinson, Julia Siege and
        Kanishka Misra that un-tidys the dataset into a wide matrix,
        performs some processing, then re-tidys the dataset. This
        package wraps the pattern of un-tidying data into a wide matrix,
        performing some processing, then turning it back into a tidy
        form. This is useful for several mathematical operations such as
        co-occurrence counts, correlations, or clustering that are best
        done on a wide matrix. 1. Link to repo here:
        https://github.com/dgrtwo/widyr

-   ❇️ [Reproducibility with {gtsummary} by Daniel D. Sjoberg and
    Karissa
    Whiting](http://www.danieldsjoberg.com/rmedicine-gtsummary/#1) 💯

    -   Link to slides here:
        <http://www.danieldsjoberg.com/rmedicine-gtsummary/#1>

-   ❇️ [colorblindr by Claire D. McWhite & Claus O.
    Wilke](https://github.com/clauswilke/colorblindr)

    -   **What is this?**

        Simulate colorblindness in production-ready R figures. 💯

    -   Link to repo here: <https://github.com/clauswilke/colorblindr>

    -   Link to the simulator: <http://hclwizard.org/cvdemulator/>

-   [ggeasy](https://github.com/jonocarroll/ggeasy) 💯 This package
    makes using ggplot2 way much easier. Check it out.

-   ❇️ [DataEditR by Dillon
    Hammill](https://dillonhammill.github.io/DataEditR/)💯

    -   **What is this?**

        Manual data entry and editing in R can be tedious, especially if
        you have limited coding experience and are accustomed to using
        software with a Graphical User Interface (GUI). DataEditR is an
        R package built on shiny and rhandsontable that makes it easy to
        interactively view, enter, filter and edit data. If you are new
        to DataEditR visit https://dillonhammill.github.io/DataEditR/ to
        get started.

    -   Link to package's site here:
        <https://dillonhammill.github.io/DataEditR/>

-   ❇️ [The magick package: Advanced Image-Processing in
    R](https://cran.r-project.org/web/packages/magick/vignettes/intro.html#Installing_magick)

    -   The new magick package is an ambitious effort to modernize and
        simplify high-quality image processing in R. It wraps the
        ImageMagick STL which is perhaps the most comprehensive
        open-source image processing library available today.

-   ❇️ **See slides as tiles!:** if you use xaringan: install
    {xaringanExtra} and add this chunk to the beginning of your slides
    to get this nifty tile overview! (press "o" to see it:
    xaringanExtra::use)\_xaringan_extra(c("title_view")

-   ❇️
    [traceback](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/traceback)

    -   By default traceback() prints the call stack of the last
        uncaught error, i.e., the sequence of calls that lead to the
        error. This is useful when an error occurs with an
        unidentifiable error message. It can also be used to print the
        current stack or arbitrary lists of deparsed calls.

-   ❇️
    [debug](https://stat.ethz.ch/R-manual/R-devel/library/base/html/debug.html)

    -   Set, unset or query the debugging flag on a function. The text
        and condition arguments are the same as those that can be
        supplied via a call to browser. They can be retrieved by the
        user once the browser has been entered, and provide a mechanism
        to allow users to identify which breakpoint has been activated.

-   ❇️ [tmap](https://github.com/mtennekes/tmap):

    -   visualizing spatiotemporal data. This package allows you to
        create thematic maps.
    -   Link to repo: <https://github.com/mtennekes/tmap>
    -   Link to repo:
        <https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html>

-   ❇️ [tidycountries: Access and Manipulate Comprehensive Country-Level
    Data in Tidy Format](https://denironyx.github.io/tidycountries/) 💯

    -   Added Thu Feb 20, 2025

    -   The **tidycountries** package offers a user-friendly interface
        for accessing, manipulating, and analyzing country-level data
        globally. It provides detailed information on countries,
        including names, regions, populations, currencies, and calling
        codes, all in a tidy data format compatible with the tidyverse
        ecosystem. This facilitates seamless integration and
        manipulation of country data for various analyses and
        visualizations.

    -   Link to package: <https://denironyx.github.io/tidycountries/>

-   ❇️ [Arrow](https://arrow.apache.org/docs/r/)

    -   The arrow package, created by Ursa Labs allows for the fast
        loading and processing of large data.
        -   Link to repo: <https://arrow.apache.org/docs/r/>

-   ❇️ [funneljoin](https://github.com/robinsones/funneljoin): allows
    you to do time-based joins to analyze a sequence of events. With
    this package you can analyze behavior funnels.

    -   Link to blog here:
        <https://hookedondata.org/introducing-the-funneljoin-package/>
    -   Link to repo here: <https://github.com/robinsones/funneljoin>

-   ❇️ [fable](https://github.com/tidyverts/fable): Fable provides a
    collection of time series forecasting models. According to the
    fables READ.me on Github, these models work within the fable
    framework, which provides the tools to evaluate, visualize, and
    combine models in a workflow consistent with the tidyverse.

    -   Link to repo: <https://github.com/tidyverts/fable>

-   ❇️
    [parameters](https://easystats.github.io/parameters/index.html)💯:
    parameters' primary goal is to provide utilities for processing the
    parameters of various statistical models (see here for a list of
    supported models). Beyond computing p-values, CIs, Bayesian indices
    and other measures for a wide variety of models, this package
    implements features like bootstrapping of parameters and models,
    feature reduction (feature extraction and variable selection), or
    tools for data reduction like functions to perform cluster, factor
    or principal component analysis.

    -   Another important goal of the parameters package is to
        facilitate and streamline the process of reporting results of
        statistical models, which includes the easy and intuitive
        calculation of standardized estimates or robust standard errors
        and p-values. parameters therefor offers a simple and unified
        syntax to process a large variety of (model) objects from many
        different packages.
    -   Link to repo:
        <https://easystats.github.io/parameters/reference/index.html#section-factors-and-principal-components>

-   ❇️ [pipediff](https://github.com/moodymudskipper/pipediff)💯💯
    **\[GREAT FOR TEACHING\]**: `pipediff()` Overrides the pipe `%>%` in
    the caller environment, the newly created pipe displays in the
    viewer the diffs between steps, then self destruct (so `pipediff()`
    works "only once", a bit like \`debugonce()).

    `pipediff(once = FALSE)` makes the change permanent in the caller
    environment until `pipediff::pipereset()` is called.

    -   Link to repo: <https://github.com/moodymudskipper/pipediff>

-   ❇️ [esquisse add-in](https://github.com/dreamRs/esquisse)

    -   *Added Feb 2nd, 2022*\
        Excerpt from site: This addin allows you to interactively
        explore your data by visualizing it with the ggplot2 package. It
        allows you to draw bar plots, curves, scatter plots, histograms,
        boxplot and sf objects, then export the graph or retrieve the
        code to reproduce the graph.
    -   See online documentation :
        <https://dreamrs.github.io/esquisse/index.html>
    -   Link to package here: https://github.com/dreamRs/esquisse

-   ❇️
    [correlation](https://easystats.github.io/correlation/reference/correlation.html)

    -   *Added Feb 2nd, 2022*
    -   **Excerpt from site:** Performs a correlation analysis.
    -   Link to package here:
        <https://easystats.github.io/correlation/reference/correlation.html>

-   ❇️ [session_info: Print session
    information](https://rdrr.io/cran/sessioninfo/man/session_info.html)

    -   *Added Feb 2nd, 2022*
    -   **Excerpt from site:** Performs a correlation analysis.
    -   Link to function here:
        https://rdrr.io/cran/sessioninfo/man/session_info.html

> \*\*\* *What I like to use if I want a list of all packages with an
> asterisk if I have them in this script:* library(sessioninfo)

```         
library(sessioninfo)
session_info(pkgs="!loaded", to_file = TRUE)
```

> \*\* *What I like to use for reports and sharing scripts:*

```         
library(sessioninfo)
session_info(pkgs="!attached", to_file = TRUE)
```
