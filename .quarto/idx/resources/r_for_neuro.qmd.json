{"title":"R for Neuroscientists","markdown":{"yaml":{"title":"R for Neuroscientists","editor":{"markdown":{"wrap":72}}},"headingText":"fNIRS & NIRS","containsRefs":false,"markdown":"\n\n<link href=\"https://fonts.googleapis.com/css?family=Cookie\" rel=\"stylesheet\"><a class=\"bmc-button\" target=\"_blank\" href=\"https://www.buymeacoffee.com/JoscelinRocha\">![Buy\nme a\ncoffee](https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg){alt=\"Buy me a coffee\"\nwidth=\"15\" height=\"21\"}Buy me a coffee</a>\n\n------------------------------------------------------------------------\n\n\n## [erzk/fnirsr: Package for analysing funtional near-infrared spectroscopy (fNIRS) data](https://rdrr.io/github/erzk/fnirsr/#vignettes)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** Load, slice, filter, plot, and transform\nfNIRS data. The majority of functions were developed to work with\nHitachi ETG-4000 data.\n\nLink to repo here: https://github.com/erzk/fnirsr\n\nCool functions from package:\n\n1.  **load_ETG4000_data()**: Loading the signal from csv files\n2.  **plot_ETG4000()**: Plotting function with \"facets\" as default.\n3.  **remove_channels_ETG4000()**: If a channel (or several channels) is\n    corrupt and cannot be cleaned then the simplest way to obtain clean\n    grand average is to remove the noisy channel.\n4.  **detrend_ETG4000_data()**: fNIRS signal is likely to show a linear\n    trend which can be removed. Grand Average in the plot above is\n    showing a linear downward trend. The linear trend can be removed\n    from all channels (recommended) or from a single channel.\n\n## [NIRStat: Novel Statistical Methods for Studying Near-Infrared Spectroscopy (NIRS) Time Series Data](https://cran.r-project.org/web/packages/NIRStat/index.html)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** Provides transfusion-related differential\ntests on Near-infrared spectroscopy (NIRS) time series with detection\nlimit, which contains two testing statistics: Mean Area Under the Curve\n(MAUC) and slope statistic. This package applied a penalized spline\nmethod within imputation setting. Testing is conducted by a nested\npermutation approach within imputation. Refer to Guo et al (2018)\n<doi:10.1177/0962280218786302> for further details.\n\n1.  Link to package here:\n    <https://cran.r-project.org/web/packages/NIRStat/index.html>\n2.  Reference Manual:\n    <https://cran.r-project.org/web/packages/NIRStat/NIRStat.pdf>\n\nCool functions from package:\n\n1.  **MAUCtest**: MAUC statistics based Analysis for NIRS time series.\n    Estimate the Mean Area Under the Curve (MAUC) statistics and conduct\n    a nonparametric test on the MAUC difference before transfusion and\n    after transfusion. If detection limit occurs at 15.\n2.  **plotNIRS**: This function visualizes the NIRS time series data and\n    estimates the underlying smoothed trend of the NRIS based on a\n    nonparametric regression approach.\n3.  **Slopetest**: Estimate the slope statistics and conduct a\n    nonparametric based test on the slope difference before transfuion\n    and after trasfusion. If detection limit occurs at 15\n\n# fMRi, MRI, & qMRI\n\n## [Package 'brainGraph'](https://cran.r-project.org/web/packages/brainGraph/brainGraph.pdf)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** A set of tools for performing graph theory\nanalysis of brain MRI data. It works with data from a Freesurfer\nanalysis (cortical thickness, volumes, local gyrification index, surface\narea), diffusion tensor tractography data (e.g., from FSL) and\nresting-state fMRI data (e.g., from DPABI). It contains a graphical user\ninterface for graph visualization and data exploration, along with\nseveral functions for generating useful figures.\n\n1.  Link to documentation:\n    <https://cran.r-project.org/web/packages/brainGraph/brainGraph.pdf>\n2.  Link to repo: <https://github.com/cwatson/brainGraph>\n3.  Link to User Guide:\n    <https://cwatson.github.io/files/brainGraph_UserGuide.pdf>\n\n## [freesurferformats: R Package For Reading and Writing Neuroimaging File Formats](https://github.com/dfsp-spirit/freesurferformats)\n\nAdded Sunday Dec 13th, 2020\n\n**What is this?**\n\n**Description from site:** The 'freesurferformats' package is an R\nlibrary for reading and writing neuroimaging file formats. The focus is\non structural MRI file formats from the FreeSurfer brain imaging\nsoftware suite, but a range of other file formats are supported as well.\nThe package can be used to read 3D and 4D volume files (brain models,\nsegemntations, voxel-wise results), 2D surface-based morphometry data\n(e.g., cortical thickness maps), brain surface meshes, atlas-based\nparcellations and labels, surface patches, and spatial transformation\nmatrices in various file formats. The vast majority of formats can also\nbe written. The related 'fsbrain' package can be used to visualize\nneuroimaging data directly in R.\n\n1.  Link to package summary: <https://www.nitrc.org/projects/fsformats/>\n2.  Link to repo: <https://github.com/dfsp-spirit/freesurferformats>\n\n## [Methods for Quantitative Magnetic Resonance Imaging ('qMRI')](https://cloud.r-project.org/web/packages/qMRI/index.html)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\nDescription from site: Implementation of methods for estimation of\nquantitative maps from Multi-Parameter Mapping (MPM) acquisitions\n(Weiskopf et al. (2013) ) including adaptive smoothing methods in the\nframework of the ESTATICS model (Estimating the apparent transverse\nrelaxation time (R2\\*) from images with different contrasts, Weiskopf et\nal. (2014) ). The smoothing method is described in Mohammadi et al.\n(2017). . Usage of the package is also described in Polzehl and Tabelow\n(2019), Magnetic Resonance Brain Imaging, Chapter 6, Springer, Use R!\nSeries.\n\n1.  Link to package:\n    <https://cloud.r-project.org/web/packages/qMRI/index.html>\n2.  Link to manual:\n    <https://cloud.r-project.org/web/packages/qMRI/qMRI.pdf>\n\n## [Visualization of MRI data in R](https://www.alexejgossmann.com/MRI_viz/)\n\nAdded Sunday Dec 13th, 2020\n\n**What is this?**\n\n**Description from site:** In this blog post I present some functions\nwhich I was able to find for MRI visualization in R, and which I found\nto be very useful. All functions presented below presuppose an image in\nthe NIfTI data format as input, and are very user-friendly.\n\nUses the ***oro.nifti*** package\n\n1.  Link to blog here: <https://www.alexejgossmann.com/MRI_viz/>\n2.  Same blog difference place:\n    <https://www.r-bloggers.com/2017/01/visualization-of-mri-data-in-r/>\n\n## [fsbrain: an R package for the visualization of structural neuroimaging data](https://www.biorxiv.org/content/10.1101/2020.09.18.302935v1.full.pdf)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** We introduce fsbrain, an R package for the\nvisualization of neuroimaging data. The package can be used to visualize\nvertex-wise and region-wise morphometry data, parcellations, labels and\nstatistical results on brain surfaces in three dimensions (3D). Voxel\ndata can be displayed in lightbox mode. The fsbrain package offers\nvarious customization options and produces publication quality plots\nwhich can be displayed interactively, saved as bitmap images, or\nintegrated into R notebooks.\n\n1.  Link to preprint:\n    <https://www.biorxiv.org/content/10.1101/2020.09.18.302935v1.full.pdf>\n2.  Link to repo: <https://github.com/dfsp-spirit/fsbrain>\n\n## [Working with fMRI data using R](https://jokedurnez.github.io/validating-fmri/01-introduction/index.html)\n\nAdded Sunday Dec 13th, 2020\n\n**What is this?**\n\n**Description from site:** Reading and visualising fMRI data with\nR/neuroconductor.\n\n1.  Link to site:\n    <https://jokedurnez.github.io/validating-fmri/01-introduction/index.html>\n\n## [fmri Package](https://cran.r-project.org/web/packages/fmri/fmri.pdf)\n\nAdded Sunday Dec 13th, 2020\n\n**What is this?**\\\n**Description from site:** Contains R-functions to perform an fMRI\nanalysis as described in\\\nPolzehl and Tabelow (2019) <DOI:10.1007/978-3-030-29184-6>,\\\nTabelow et al. (2006) <DOI:10.1016/j.neuroimage.2006.06.029>,\\\nPolzehl et al. (2010) <DOI:10.1016/j.neuroimage.2010.04.241>,\\\nTabelow and Polzehl (2011) <DOI:10.18637/jss.v044.i11>.\n\nCool functions from package:\n\n1.  **read.NIFTI()**: Read fMRI data from NIFTI file(s)\n2.  **setmask()**: Add or replace mask in an fmridata object\n3.  **oro2fmri()**/**fmri2oro()**: Convert Between fmridata and\n    oro.nifti\n4.  **cutroi()**: This functions cuts a region-of-interest (ROI) from\n    input data\n5.  **fmri.cluster()**: Cluster thresholding\n6.  **fmri.design ()**: Return a design matrix for a linear model with\n    given stimuli and possible polynomial drift terms\n7.  **fmri.designG()**: This function returns a design matrix for\n    multi-subject fMRI data to fit a Linear Mixed-effects Model\n    (one-stage procedure) with given stimuli, polynomial drift terms and\n    a set of known population parameters\n8.  **fmri.lmePar()**: Group maps are directly estimated from the BOLD\n    time series data of all subjects using lme from R package nlme to\n    fit a Linear Mixed-effects Model with temporally correlated and\n    heteroscedastic within-subject errors. Voxel-wise regression\n    analysis is accelerated by optional parallel processing using R\n    package parallel\n9.  **fmri.metaPar()**: Linear Mixed-effects Meta-Analysis model for\n    fMRI data\n10. **fmri.pvalue()**: P-values\n11. **plot.fmripvalue()**: Visualize fMRI p-value maps\n\n## [R for statistical analysis of fMRI data](https://neurohackademy.org/course/r-for-statistical-analysis-of-fmri-data/)\n\nBy [Tara\nMadhyastha](https://neurohackademy.org/course/r-for-statistical-analysis-of-fmri-data/)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\nTutorial give at Neurohackademy 2018 by Tara Madhyastha\n\n1.  Link to site in NeuroHackademy:\n    <https://neurohackademy.org/course/r-for-statistical-analysis-of-fmri-data/>\n2.  Link to youtube video: <https://youtu.be/sdbkWvFhTZ0>\n\n## [Processing fMRI Data in R](https://johnmuschelli.com/Neuroimaging_in_R/fmri_proc.html#1)\n\nBy [John\nMuschelli](https://johnmuschelli.com/Neuroimaging_in_R/fmri_proc.html#1)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\nSlides created by John Muschelli for processing fMRI Data in R.\n\n1.  Link to slides here:\n    <https://johnmuschelli.com/Neuroimaging_in_R/fmri_proc.html#1>\n2.  Link to repo here:\n    <https://github.com/muschellij2/Neuroimaging_in_R>\n\n# EEG\n\n## [Package EEGSpectralAnalysis details](https://neuroconductor.org/help/EEGSpectralAnalysis/)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** Compute and plot various spectral EEG\nanalyses.\n\n1.  Link to documentation here:\n    <https://neuroconductor.org/help/EEGSpectralAnalysis/>\n\n## [Package eegUtils](https://neuroconductor.org/help/eegUtils/)\n\nAdded Sunday Dec 13th, 2020\n\n**What is this?**\n\n**Description from site:** A collection of functions for EEG processing.\nIncludes import functions for Biosemi (BDF) and Neuroscan (CNT),\ntopographical plotting, referencing, and epoching. eegUtils is a package\nfor the processing, manipulation, and plotting of EEG data. It includes\nfunctions for importing data from a variety of file formats (including\nBiosemi, Brain Vision Analyzer, and EEGLAB), many of the typical steps\nin pre-preprocessing (filtering, referencing, artefact rejection), more\nadvanced processing techniques (time-frequency analysis, ICA), and many\ntypes of plot that are common in the field (ERP plots, time-frequency\nplots, topographical scalp maps). Although it uses custom object\nclasses, it is designed such that these are always translatable to\nstandard R data.frames, and thus can be used with any of the myriad\npackages and methods that support standard R formats.\n\n1.  Link to documentation here:\n    <https://neuroconductor.org/help/eegUtils/>\n2.  Link to repo here: <https://github.com/craddm/eegUtils/>\n\n# All Neuro\n\n## [neuropointillist](http://ibic.github.io/neuropointillist/)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\nDescription from site: Flexible modeling of neuroimaging data in R,\npoint by point\n\n1.  Link to site: http://ibic.github.io/neuropointillist/\n2.  Content:\n\n-   [Simple fMRI\n    example](http://ibic.github.io/neuropointillist/fmri.example.html)\n-   [Advanced fMRI\n    example](http://ibic.github.io/neuropointillist/fingerfootlips.example.html)\n-   [Permutation testing fMRI\n    example](http://ibic.github.io/neuropointillist/fingerfootlips_permute.html)\n-   [Flournoy example\n    (longitudinal)](http://ibic.github.io/neuropointillist/flournoy.example.html)\n-   [Correcting for multiple\n    comparisons](http://ibic.github.io/neuropointillist/clustercorrection.html)\n\n## [Plotting brain atlases in ggplot](https://lcbc-uio.github.io/ggseg/articles/ggseg.html)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** Plotting regions from different brain atlases\nggplot2 is a handy way of displaying results or grouping of aparc data.\n\nThe function ggseg(), is based in the ggplot2 format, it is recommended\nto get familiarized with plotting data with ggplot2.\n\nOut-of-the-box, ggseg() works without supplying any extra information.\nIt will create a base plot of the aparc brain segmentations.\n\n1.  Link to site: <https://lcbc-uio.github.io/ggseg/articles/ggseg.html>\n2.  Link to ggseg vignette:\n    <https://github.com/LCBC-UiO/ggseg/blob/master/vignettes/ggseg.Rmd>\n3.  Link to ggseg repo: <https://github.com/LCBC-UiO/ggseg>\n\n## [ggsegExtra](https://github.com/LCBC-UiO/ggsegExtra)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** This package mainly contains a plotting\nfunction ggseg and data.frames of different brain atlases for plotting.\nPlotting results of analyses on regions or networks often involves\nswapping between statistical tools, like R, and software for brain\nimaging to correctly visualize analysis results.\n\nThis package aims to make it possible to plot results directly through\nR.\n\n1.  Link to documentation here: <https://neuroconductor.org/help/ggseg/>\n2.  Link to wiki here:\n    <https://github.com/LCBC-UiO/ggsegExtra/wiki/Contributing%3A-polygon-atlases-new>\n3.  Link to repo here: <https://github.com/LCBC-UiO/ggsegExtra>\n\n## [Neuroconductor](https://neuroconductor.org/)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** Neuroconductor is an open-source platform for\nrapid testing and dissemination of reproducible computational imaging\nsoftware. The goals of the project are to:\n\nprovide a centralized repository of R software dedicated to image\nanalysis; disseminate quickly software updates; educate a large, diverse\ncommunity of scientists using detailed tutorials and short courses;\nensure quality via automatic and manual quality controls; and promote\nreproducibility of image data analysis. Based on the programming\nlanguage R, Neuroconductor started with 51 inter-operable packages that\ncover multiple areas of imaging including visualization, data processing\nand storage, and statistical inference. Neuroconductor accepts new R\npackage submissions, which are subject to a formal review and continuous\nautomated testing.\n\n1.  Link to site here: <https://neuroconductor.org/>\n\n## [Neuroimaging Analysis within R](https://johnmuschelli.com/imaging_in_r/)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\nSeries of slides with code for course on Neuroimaging Analysis: All the\nPDF slides are located in a zip file here.\n\n-   Introduction and R\n    [Slides](https://johnmuschelli.com/imaging_in_r/intro/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/intro/index.pdf), [R\n    Code](https://johnmuschelli.com/imaging_in_r/intro/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/intro/index.Rmd)\n-   General R (not covered at ENAR)\n    [Slides](https://johnmuschelli.com/imaging_in_r/general_r/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/general_r/index.pdf),\n    [R Code](https://johnmuschelli.com/imaging_in_r/general_r/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/general_r/index.Rmd)\n-   Imaging Packages in R\n    [Slides](https://johnmuschelli.com/imaging_in_r/imaging_r_packages/index.html)\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/imaging_r_packages/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/imaging_r_packages/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/imaging_r_packages/index.Rmd)\n-   Visualization of Images\n    [Slides](https://johnmuschelli.com/imaging_in_r/visualization/index.html)\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/visualization/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/visualization/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/visualization/index.Rmd)\n-   Inhomogeneity Correction\n    [Slides](https://johnmuschelli.com/imaging_in_r/inhomogeneity_correction_ms/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/inhomogeneity_correction_ms/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/inhomogeneity_correction_ms/index.R)\n    [Source](https://johnmuschelli.com/imaging_in_r/inhomogeneity_correction_ms/index.Rmd)\n-   Brain Extraction/Segmentation\n    [Slides](https://johnmuschelli.com/imaging_in_r/brain_extraction_malf/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/brain_extraction_malf/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/brain_extraction_malf/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/brain_extraction_malf/index.Rmd)\n-   Image Registration\n    [Slides](https://johnmuschelli.com/imaging_in_r/coregistration/index.html)\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/coregistration/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/coregistration/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/coregistration/index.Rmd)\n-   Tissue-Class Segmentation\n    [Slides](https://johnmuschelli.com/imaging_in_r/segmentation/index.html)\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/segmentation/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/segmentation/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/segmentation/index.Rmd)\n-   Intensity Normalization\n    [Slides](https://johnmuschelli.com/imaging_in_r/intensity_normalization/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/intensity_normalization/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/intensity_normalization/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/intensity_normalization/index.Rmd)\n-   Segmentation of MS Lesions\n    [Slides](https://johnmuschelli.com/imaging_in_r/ms_lesion_segmentation/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/ms_lesion_segmentation/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/ms_lesion_segmentation/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/ms_lesion_segmentation/index.Rmd)\n-   Image Harmonization\n    [Slides](https://johnmuschelli.com/imaging_in_r/image_harmonization/index.html)\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/ms_lesion_segmentation/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/image_harmonization/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/image_harmonization/index.Rmd)\n-   Starting with Raw (DICOM) Data (not covered)\n    [Slides](https://johnmuschelli.com/imaging_in_r/starting_with_raw_data/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/starting_with_raw_data/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/starting_with_raw_data/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/starting_with_raw_data/index.Rmd)\n\n1.  Link to site here: <https://johnmuschelli.com/imaging_in_r/>\n","srcMarkdownNoYaml":"\n\n<link href=\"https://fonts.googleapis.com/css?family=Cookie\" rel=\"stylesheet\"><a class=\"bmc-button\" target=\"_blank\" href=\"https://www.buymeacoffee.com/JoscelinRocha\">![Buy\nme a\ncoffee](https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg){alt=\"Buy me a coffee\"\nwidth=\"15\" height=\"21\"}Buy me a coffee</a>\n\n------------------------------------------------------------------------\n\n# fNIRS & NIRS\n\n## [erzk/fnirsr: Package for analysing funtional near-infrared spectroscopy (fNIRS) data](https://rdrr.io/github/erzk/fnirsr/#vignettes)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** Load, slice, filter, plot, and transform\nfNIRS data. The majority of functions were developed to work with\nHitachi ETG-4000 data.\n\nLink to repo here: https://github.com/erzk/fnirsr\n\nCool functions from package:\n\n1.  **load_ETG4000_data()**: Loading the signal from csv files\n2.  **plot_ETG4000()**: Plotting function with \"facets\" as default.\n3.  **remove_channels_ETG4000()**: If a channel (or several channels) is\n    corrupt and cannot be cleaned then the simplest way to obtain clean\n    grand average is to remove the noisy channel.\n4.  **detrend_ETG4000_data()**: fNIRS signal is likely to show a linear\n    trend which can be removed. Grand Average in the plot above is\n    showing a linear downward trend. The linear trend can be removed\n    from all channels (recommended) or from a single channel.\n\n## [NIRStat: Novel Statistical Methods for Studying Near-Infrared Spectroscopy (NIRS) Time Series Data](https://cran.r-project.org/web/packages/NIRStat/index.html)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** Provides transfusion-related differential\ntests on Near-infrared spectroscopy (NIRS) time series with detection\nlimit, which contains two testing statistics: Mean Area Under the Curve\n(MAUC) and slope statistic. This package applied a penalized spline\nmethod within imputation setting. Testing is conducted by a nested\npermutation approach within imputation. Refer to Guo et al (2018)\n<doi:10.1177/0962280218786302> for further details.\n\n1.  Link to package here:\n    <https://cran.r-project.org/web/packages/NIRStat/index.html>\n2.  Reference Manual:\n    <https://cran.r-project.org/web/packages/NIRStat/NIRStat.pdf>\n\nCool functions from package:\n\n1.  **MAUCtest**: MAUC statistics based Analysis for NIRS time series.\n    Estimate the Mean Area Under the Curve (MAUC) statistics and conduct\n    a nonparametric test on the MAUC difference before transfusion and\n    after transfusion. If detection limit occurs at 15.\n2.  **plotNIRS**: This function visualizes the NIRS time series data and\n    estimates the underlying smoothed trend of the NRIS based on a\n    nonparametric regression approach.\n3.  **Slopetest**: Estimate the slope statistics and conduct a\n    nonparametric based test on the slope difference before transfuion\n    and after trasfusion. If detection limit occurs at 15\n\n# fMRi, MRI, & qMRI\n\n## [Package 'brainGraph'](https://cran.r-project.org/web/packages/brainGraph/brainGraph.pdf)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** A set of tools for performing graph theory\nanalysis of brain MRI data. It works with data from a Freesurfer\nanalysis (cortical thickness, volumes, local gyrification index, surface\narea), diffusion tensor tractography data (e.g., from FSL) and\nresting-state fMRI data (e.g., from DPABI). It contains a graphical user\ninterface for graph visualization and data exploration, along with\nseveral functions for generating useful figures.\n\n1.  Link to documentation:\n    <https://cran.r-project.org/web/packages/brainGraph/brainGraph.pdf>\n2.  Link to repo: <https://github.com/cwatson/brainGraph>\n3.  Link to User Guide:\n    <https://cwatson.github.io/files/brainGraph_UserGuide.pdf>\n\n## [freesurferformats: R Package For Reading and Writing Neuroimaging File Formats](https://github.com/dfsp-spirit/freesurferformats)\n\nAdded Sunday Dec 13th, 2020\n\n**What is this?**\n\n**Description from site:** The 'freesurferformats' package is an R\nlibrary for reading and writing neuroimaging file formats. The focus is\non structural MRI file formats from the FreeSurfer brain imaging\nsoftware suite, but a range of other file formats are supported as well.\nThe package can be used to read 3D and 4D volume files (brain models,\nsegemntations, voxel-wise results), 2D surface-based morphometry data\n(e.g., cortical thickness maps), brain surface meshes, atlas-based\nparcellations and labels, surface patches, and spatial transformation\nmatrices in various file formats. The vast majority of formats can also\nbe written. The related 'fsbrain' package can be used to visualize\nneuroimaging data directly in R.\n\n1.  Link to package summary: <https://www.nitrc.org/projects/fsformats/>\n2.  Link to repo: <https://github.com/dfsp-spirit/freesurferformats>\n\n## [Methods for Quantitative Magnetic Resonance Imaging ('qMRI')](https://cloud.r-project.org/web/packages/qMRI/index.html)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\nDescription from site: Implementation of methods for estimation of\nquantitative maps from Multi-Parameter Mapping (MPM) acquisitions\n(Weiskopf et al. (2013) ) including adaptive smoothing methods in the\nframework of the ESTATICS model (Estimating the apparent transverse\nrelaxation time (R2\\*) from images with different contrasts, Weiskopf et\nal. (2014) ). The smoothing method is described in Mohammadi et al.\n(2017). . Usage of the package is also described in Polzehl and Tabelow\n(2019), Magnetic Resonance Brain Imaging, Chapter 6, Springer, Use R!\nSeries.\n\n1.  Link to package:\n    <https://cloud.r-project.org/web/packages/qMRI/index.html>\n2.  Link to manual:\n    <https://cloud.r-project.org/web/packages/qMRI/qMRI.pdf>\n\n## [Visualization of MRI data in R](https://www.alexejgossmann.com/MRI_viz/)\n\nAdded Sunday Dec 13th, 2020\n\n**What is this?**\n\n**Description from site:** In this blog post I present some functions\nwhich I was able to find for MRI visualization in R, and which I found\nto be very useful. All functions presented below presuppose an image in\nthe NIfTI data format as input, and are very user-friendly.\n\nUses the ***oro.nifti*** package\n\n1.  Link to blog here: <https://www.alexejgossmann.com/MRI_viz/>\n2.  Same blog difference place:\n    <https://www.r-bloggers.com/2017/01/visualization-of-mri-data-in-r/>\n\n## [fsbrain: an R package for the visualization of structural neuroimaging data](https://www.biorxiv.org/content/10.1101/2020.09.18.302935v1.full.pdf)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** We introduce fsbrain, an R package for the\nvisualization of neuroimaging data. The package can be used to visualize\nvertex-wise and region-wise morphometry data, parcellations, labels and\nstatistical results on brain surfaces in three dimensions (3D). Voxel\ndata can be displayed in lightbox mode. The fsbrain package offers\nvarious customization options and produces publication quality plots\nwhich can be displayed interactively, saved as bitmap images, or\nintegrated into R notebooks.\n\n1.  Link to preprint:\n    <https://www.biorxiv.org/content/10.1101/2020.09.18.302935v1.full.pdf>\n2.  Link to repo: <https://github.com/dfsp-spirit/fsbrain>\n\n## [Working with fMRI data using R](https://jokedurnez.github.io/validating-fmri/01-introduction/index.html)\n\nAdded Sunday Dec 13th, 2020\n\n**What is this?**\n\n**Description from site:** Reading and visualising fMRI data with\nR/neuroconductor.\n\n1.  Link to site:\n    <https://jokedurnez.github.io/validating-fmri/01-introduction/index.html>\n\n## [fmri Package](https://cran.r-project.org/web/packages/fmri/fmri.pdf)\n\nAdded Sunday Dec 13th, 2020\n\n**What is this?**\\\n**Description from site:** Contains R-functions to perform an fMRI\nanalysis as described in\\\nPolzehl and Tabelow (2019) <DOI:10.1007/978-3-030-29184-6>,\\\nTabelow et al. (2006) <DOI:10.1016/j.neuroimage.2006.06.029>,\\\nPolzehl et al. (2010) <DOI:10.1016/j.neuroimage.2010.04.241>,\\\nTabelow and Polzehl (2011) <DOI:10.18637/jss.v044.i11>.\n\nCool functions from package:\n\n1.  **read.NIFTI()**: Read fMRI data from NIFTI file(s)\n2.  **setmask()**: Add or replace mask in an fmridata object\n3.  **oro2fmri()**/**fmri2oro()**: Convert Between fmridata and\n    oro.nifti\n4.  **cutroi()**: This functions cuts a region-of-interest (ROI) from\n    input data\n5.  **fmri.cluster()**: Cluster thresholding\n6.  **fmri.design ()**: Return a design matrix for a linear model with\n    given stimuli and possible polynomial drift terms\n7.  **fmri.designG()**: This function returns a design matrix for\n    multi-subject fMRI data to fit a Linear Mixed-effects Model\n    (one-stage procedure) with given stimuli, polynomial drift terms and\n    a set of known population parameters\n8.  **fmri.lmePar()**: Group maps are directly estimated from the BOLD\n    time series data of all subjects using lme from R package nlme to\n    fit a Linear Mixed-effects Model with temporally correlated and\n    heteroscedastic within-subject errors. Voxel-wise regression\n    analysis is accelerated by optional parallel processing using R\n    package parallel\n9.  **fmri.metaPar()**: Linear Mixed-effects Meta-Analysis model for\n    fMRI data\n10. **fmri.pvalue()**: P-values\n11. **plot.fmripvalue()**: Visualize fMRI p-value maps\n\n## [R for statistical analysis of fMRI data](https://neurohackademy.org/course/r-for-statistical-analysis-of-fmri-data/)\n\nBy [Tara\nMadhyastha](https://neurohackademy.org/course/r-for-statistical-analysis-of-fmri-data/)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\nTutorial give at Neurohackademy 2018 by Tara Madhyastha\n\n1.  Link to site in NeuroHackademy:\n    <https://neurohackademy.org/course/r-for-statistical-analysis-of-fmri-data/>\n2.  Link to youtube video: <https://youtu.be/sdbkWvFhTZ0>\n\n## [Processing fMRI Data in R](https://johnmuschelli.com/Neuroimaging_in_R/fmri_proc.html#1)\n\nBy [John\nMuschelli](https://johnmuschelli.com/Neuroimaging_in_R/fmri_proc.html#1)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\nSlides created by John Muschelli for processing fMRI Data in R.\n\n1.  Link to slides here:\n    <https://johnmuschelli.com/Neuroimaging_in_R/fmri_proc.html#1>\n2.  Link to repo here:\n    <https://github.com/muschellij2/Neuroimaging_in_R>\n\n# EEG\n\n## [Package EEGSpectralAnalysis details](https://neuroconductor.org/help/EEGSpectralAnalysis/)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** Compute and plot various spectral EEG\nanalyses.\n\n1.  Link to documentation here:\n    <https://neuroconductor.org/help/EEGSpectralAnalysis/>\n\n## [Package eegUtils](https://neuroconductor.org/help/eegUtils/)\n\nAdded Sunday Dec 13th, 2020\n\n**What is this?**\n\n**Description from site:** A collection of functions for EEG processing.\nIncludes import functions for Biosemi (BDF) and Neuroscan (CNT),\ntopographical plotting, referencing, and epoching. eegUtils is a package\nfor the processing, manipulation, and plotting of EEG data. It includes\nfunctions for importing data from a variety of file formats (including\nBiosemi, Brain Vision Analyzer, and EEGLAB), many of the typical steps\nin pre-preprocessing (filtering, referencing, artefact rejection), more\nadvanced processing techniques (time-frequency analysis, ICA), and many\ntypes of plot that are common in the field (ERP plots, time-frequency\nplots, topographical scalp maps). Although it uses custom object\nclasses, it is designed such that these are always translatable to\nstandard R data.frames, and thus can be used with any of the myriad\npackages and methods that support standard R formats.\n\n1.  Link to documentation here:\n    <https://neuroconductor.org/help/eegUtils/>\n2.  Link to repo here: <https://github.com/craddm/eegUtils/>\n\n# All Neuro\n\n## [neuropointillist](http://ibic.github.io/neuropointillist/)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\nDescription from site: Flexible modeling of neuroimaging data in R,\npoint by point\n\n1.  Link to site: http://ibic.github.io/neuropointillist/\n2.  Content:\n\n-   [Simple fMRI\n    example](http://ibic.github.io/neuropointillist/fmri.example.html)\n-   [Advanced fMRI\n    example](http://ibic.github.io/neuropointillist/fingerfootlips.example.html)\n-   [Permutation testing fMRI\n    example](http://ibic.github.io/neuropointillist/fingerfootlips_permute.html)\n-   [Flournoy example\n    (longitudinal)](http://ibic.github.io/neuropointillist/flournoy.example.html)\n-   [Correcting for multiple\n    comparisons](http://ibic.github.io/neuropointillist/clustercorrection.html)\n\n## [Plotting brain atlases in ggplot](https://lcbc-uio.github.io/ggseg/articles/ggseg.html)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** Plotting regions from different brain atlases\nggplot2 is a handy way of displaying results or grouping of aparc data.\n\nThe function ggseg(), is based in the ggplot2 format, it is recommended\nto get familiarized with plotting data with ggplot2.\n\nOut-of-the-box, ggseg() works without supplying any extra information.\nIt will create a base plot of the aparc brain segmentations.\n\n1.  Link to site: <https://lcbc-uio.github.io/ggseg/articles/ggseg.html>\n2.  Link to ggseg vignette:\n    <https://github.com/LCBC-UiO/ggseg/blob/master/vignettes/ggseg.Rmd>\n3.  Link to ggseg repo: <https://github.com/LCBC-UiO/ggseg>\n\n## [ggsegExtra](https://github.com/LCBC-UiO/ggsegExtra)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** This package mainly contains a plotting\nfunction ggseg and data.frames of different brain atlases for plotting.\nPlotting results of analyses on regions or networks often involves\nswapping between statistical tools, like R, and software for brain\nimaging to correctly visualize analysis results.\n\nThis package aims to make it possible to plot results directly through\nR.\n\n1.  Link to documentation here: <https://neuroconductor.org/help/ggseg/>\n2.  Link to wiki here:\n    <https://github.com/LCBC-UiO/ggsegExtra/wiki/Contributing%3A-polygon-atlases-new>\n3.  Link to repo here: <https://github.com/LCBC-UiO/ggsegExtra>\n\n## [Neuroconductor](https://neuroconductor.org/)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\n**Description from site:** Neuroconductor is an open-source platform for\nrapid testing and dissemination of reproducible computational imaging\nsoftware. The goals of the project are to:\n\nprovide a centralized repository of R software dedicated to image\nanalysis; disseminate quickly software updates; educate a large, diverse\ncommunity of scientists using detailed tutorials and short courses;\nensure quality via automatic and manual quality controls; and promote\nreproducibility of image data analysis. Based on the programming\nlanguage R, Neuroconductor started with 51 inter-operable packages that\ncover multiple areas of imaging including visualization, data processing\nand storage, and statistical inference. Neuroconductor accepts new R\npackage submissions, which are subject to a formal review and continuous\nautomated testing.\n\n1.  Link to site here: <https://neuroconductor.org/>\n\n## [Neuroimaging Analysis within R](https://johnmuschelli.com/imaging_in_r/)\n\nAdded Sunday Dec 13th, 2020\\\n**What is this?**\n\nSeries of slides with code for course on Neuroimaging Analysis: All the\nPDF slides are located in a zip file here.\n\n-   Introduction and R\n    [Slides](https://johnmuschelli.com/imaging_in_r/intro/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/intro/index.pdf), [R\n    Code](https://johnmuschelli.com/imaging_in_r/intro/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/intro/index.Rmd)\n-   General R (not covered at ENAR)\n    [Slides](https://johnmuschelli.com/imaging_in_r/general_r/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/general_r/index.pdf),\n    [R Code](https://johnmuschelli.com/imaging_in_r/general_r/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/general_r/index.Rmd)\n-   Imaging Packages in R\n    [Slides](https://johnmuschelli.com/imaging_in_r/imaging_r_packages/index.html)\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/imaging_r_packages/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/imaging_r_packages/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/imaging_r_packages/index.Rmd)\n-   Visualization of Images\n    [Slides](https://johnmuschelli.com/imaging_in_r/visualization/index.html)\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/visualization/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/visualization/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/visualization/index.Rmd)\n-   Inhomogeneity Correction\n    [Slides](https://johnmuschelli.com/imaging_in_r/inhomogeneity_correction_ms/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/inhomogeneity_correction_ms/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/inhomogeneity_correction_ms/index.R)\n    [Source](https://johnmuschelli.com/imaging_in_r/inhomogeneity_correction_ms/index.Rmd)\n-   Brain Extraction/Segmentation\n    [Slides](https://johnmuschelli.com/imaging_in_r/brain_extraction_malf/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/brain_extraction_malf/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/brain_extraction_malf/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/brain_extraction_malf/index.Rmd)\n-   Image Registration\n    [Slides](https://johnmuschelli.com/imaging_in_r/coregistration/index.html)\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/coregistration/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/coregistration/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/coregistration/index.Rmd)\n-   Tissue-Class Segmentation\n    [Slides](https://johnmuschelli.com/imaging_in_r/segmentation/index.html)\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/segmentation/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/segmentation/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/segmentation/index.Rmd)\n-   Intensity Normalization\n    [Slides](https://johnmuschelli.com/imaging_in_r/intensity_normalization/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/intensity_normalization/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/intensity_normalization/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/intensity_normalization/index.Rmd)\n-   Segmentation of MS Lesions\n    [Slides](https://johnmuschelli.com/imaging_in_r/ms_lesion_segmentation/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/ms_lesion_segmentation/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/ms_lesion_segmentation/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/ms_lesion_segmentation/index.Rmd)\n-   Image Harmonization\n    [Slides](https://johnmuschelli.com/imaging_in_r/image_harmonization/index.html)\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/ms_lesion_segmentation/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/image_harmonization/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/image_harmonization/index.Rmd)\n-   Starting with Raw (DICOM) Data (not covered)\n    [Slides](https://johnmuschelli.com/imaging_in_r/starting_with_raw_data/index.html),\n    [PDF\n    Slides](https://johnmuschelli.com/imaging_in_r/starting_with_raw_data/index.pdf),\n    [R\n    Code](https://johnmuschelli.com/imaging_in_r/starting_with_raw_data/index.R),\n    [Source](https://johnmuschelli.com/imaging_in_r/starting_with_raw_data/index.Rmd)\n\n1.  Link to site here: <https://johnmuschelli.com/imaging_in_r/>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"r_for_neuro.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","editor":{"markdown":{"wrap":72}},"theme":{"light":["cosmo","../theme.scss"],"dark":["cosmo","../theme-dark.scss"]},"mainfont":"Atkinson Hyperlegible","code-copy":true,"title":"R for Neuroscientists"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}